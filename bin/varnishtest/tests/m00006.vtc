varnishtest "test vmod_std.collect()"

server s1 {
	rxreq
	expect req.url == "/1"
	expect req.http.foo == "1, 2"
	txresp -hdr "bar: a" -hdr "bar: b" -bodylen 1

	rxreq
	expect req.url == "/2"
	expect req.http.baz == "1, 2"
	txresp -hdr "qux: a" -hdr "qux: b" -bodylen 1
} -start

varnish v1 -vcl+backend {
	import std from "${topbuild}/lib/libvmod_std/.libs/libvmod_std.so" ;

	sub vcl_recv {
		std.collect(req.http.foo);
	}
	sub vcl_fetch {
		std.collect(bereq.http.baz);
	}
	sub vcl_response {
		std.collect(beresp.http.bar);
	}
	sub vcl_deliver {
		std.collect(resp.http.qux);
	}
} -start

client c1 {
	txreq  -url "/1" -hdr "Foo: 1" -hdr "Foo: 2"
	rxresp 
	expect resp.http.bar == "a, b"
	expect resp.status == 200
	expect resp.bodylen == 1

	txreq -url "/2" -hdr "Baz: 1" -hdr "Baz: 2"
	rxresp
	expect resp.http.qux == "a, b"
	expect resp.status == 200
	expect resp.bodylen == 1
} -run

varnish v1 -errvcl {'beresp.http.bar': Not available in method 'vcl_recv'}  {
	import std from "${topbuild}/lib/libvmod_std/.libs/libvmod_std.so" ;

	backend b { .host = "127.0.0.1"; }

	sub vcl_recv {
		std.collect(beresp.http.bar);
	}
}
